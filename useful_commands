ansible -m ping all -o
ansible hadoop -m setup  #provides info about conf of hadoop host
ansible hadoop -m file -a 'path=/tmp/test state=touch'  #creates test file on hadoop node
ansible all -m file -a 'path=/tmp/test state=file mode=600'  #change chmod of test file on all hosts
ansible hadoop -m copy -a 'src=/tmp/x dest=/tmp/x'  #copy files from local host to hadoop host
ansible all -m command -a 'hostname'  #run command module which allows to run command - hostname in this case
ansible hadoop -m file -a 'path=/tmp/x state=absent' #removes file /tmp/x from hadoop node
ansible hadoop -m fetch -a 'src=/tmp/test_modules dest=/tmp/test_modules' #fetch files from remote hadoop host
ansible-playbook playbook_motd -e 'motd=welcome to centos7n'  #giving motd variable value from cmd, variable must be in playbook
ansible target -m setup -a 'gather_subset=network,!all,!min'  # excluded from search all and min !=excude
ansible target -m setup -a 'filter=ansible_memfree_mb'   #filer paramater
ansible target -m setup -a 'filter=*ipv4*'        #filter with wildmask
ansible target -m file -a 'path=/tmp/x state=directory'  #create directory on target node

======VAULT=======
ansible-vault encrypt_string --ask-vault-pass --name 'ansible_become_pass' 'password'   # encrypting password for ansible_become_pass which is password
ansible-vault encrypt_string --vault-id vault-name@propmt --name 'ansible_become_pass' 'password'   # encrypting password for ansible_become_pass which is password, providing vault name in case of multiple vaults, prompt for password
ansible-vault --ask-vault-pass encrypt file-name    #encrypts file 
ansible-vault --ask-vault-pass decrypt file-name    #decrypt file file 
ansible-vault --ask-vault-pass rekey file-name      #set new password for vault for file
ansible-vault --vault-id file_with_pass view encrypted_file  #vie wdecrypted file with pass stored in file
ansible-vault --vault-id @prompt view encrypted_file  #vie wdecrypted file with pass promted from user
ansible-vault --vault-id vars@prompt encrypt external_vault_vars.yml  #encrypt file with vault named vars - in case more vaults will be needed




=====================================================================================================================
/etc/ansible/facts.d   - we can create new custom facts which will be collected while running setup module
e.g. create file date1.fact as below

#!/bin/bash
echo [date]
echo date=`date`

date will popout in setup module. If we don't have sudo access we can create fact file in another destoination and ther provide
task in playbook:
- name: reload facts
  setup:
    fact_path: /path_to-fact_file
======================================================================================================================
